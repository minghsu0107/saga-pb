// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: purchase.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PurchaseStep int32

const (
	PurchaseStep_STEP_UPDATE_PRODUCT_INVENTORY PurchaseStep = 0
	PurchaseStep_STEP_CREATE_ORDER             PurchaseStep = 1
	PurchaseStep_STEP_CREATE_PAYMENT           PurchaseStep = 2
)

// Enum value maps for PurchaseStep.
var (
	PurchaseStep_name = map[int32]string{
		0: "STEP_UPDATE_PRODUCT_INVENTORY",
		1: "STEP_CREATE_ORDER",
		2: "STEP_CREATE_PAYMENT",
	}
	PurchaseStep_value = map[string]int32{
		"STEP_UPDATE_PRODUCT_INVENTORY": 0,
		"STEP_CREATE_ORDER":             1,
		"STEP_CREATE_PAYMENT":           2,
	}
)

func (x PurchaseStep) Enum() *PurchaseStep {
	p := new(PurchaseStep)
	*p = x
	return p
}

func (x PurchaseStep) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PurchaseStep) Descriptor() protoreflect.EnumDescriptor {
	return file_purchase_proto_enumTypes[0].Descriptor()
}

func (PurchaseStep) Type() protoreflect.EnumType {
	return &file_purchase_proto_enumTypes[0]
}

func (x PurchaseStep) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PurchaseStep.Descriptor instead.
func (PurchaseStep) EnumDescriptor() ([]byte, []int) {
	return file_purchase_proto_rawDescGZIP(), []int{0}
}

type PurchaseStatus int32

const (
	PurchaseStatus_STATUS_EXUCUTE       PurchaseStatus = 0
	PurchaseStatus_STATUS_SUCCESS       PurchaseStatus = 1
	PurchaseStatus_STATUS_FAILED        PurchaseStatus = 2
	PurchaseStatus_STATUS_ROLLBACKED    PurchaseStatus = 3
	PurchaseStatus_STATUS_ROLLBACK_FAIL PurchaseStatus = 4
)

// Enum value maps for PurchaseStatus.
var (
	PurchaseStatus_name = map[int32]string{
		0: "STATUS_EXUCUTE",
		1: "STATUS_SUCCESS",
		2: "STATUS_FAILED",
		3: "STATUS_ROLLBACKED",
		4: "STATUS_ROLLBACK_FAIL",
	}
	PurchaseStatus_value = map[string]int32{
		"STATUS_EXUCUTE":       0,
		"STATUS_SUCCESS":       1,
		"STATUS_FAILED":        2,
		"STATUS_ROLLBACKED":    3,
		"STATUS_ROLLBACK_FAIL": 4,
	}
)

func (x PurchaseStatus) Enum() *PurchaseStatus {
	p := new(PurchaseStatus)
	*p = x
	return p
}

func (x PurchaseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PurchaseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_purchase_proto_enumTypes[1].Descriptor()
}

func (PurchaseStatus) Type() protoreflect.EnumType {
	return &file_purchase_proto_enumTypes[1]
}

func (x PurchaseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PurchaseStatus.Descriptor instead.
func (PurchaseStatus) EnumDescriptor() ([]byte, []int) {
	return file_purchase_proto_rawDescGZIP(), []int{1}
}

// data schemas
type Purchase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order   *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	Payment *Payment `protobuf:"bytes,2,opt,name=payment,proto3" json:"payment,omitempty"`
}

func (x *Purchase) Reset() {
	*x = Purchase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purchase_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Purchase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Purchase) ProtoMessage() {}

func (x *Purchase) ProtoReflect() protoreflect.Message {
	mi := &file_purchase_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Purchase.ProtoReflect.Descriptor instead.
func (*Purchase) Descriptor() ([]byte, []int) {
	return file_purchase_proto_rawDescGZIP(), []int{0}
}

func (x *Purchase) GetOrder() *Order {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *Purchase) GetPayment() *Payment {
	if x != nil {
		return x.Payment
	}
	return nil
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId     uint64           `protobuf:"varint,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	PurchasedItems []*PurchasedItem `protobuf:"bytes,2,rep,name=purchased_items,json=purchasedItems,proto3" json:"purchased_items,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purchase_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_purchase_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_purchase_proto_rawDescGZIP(), []int{1}
}

func (x *Order) GetCustomerId() uint64 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *Order) GetPurchasedItems() []*PurchasedItem {
	if x != nil {
		return x.PurchasedItems
	}
	return nil
}

type PurchasedItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId uint64 `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Amount    int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *PurchasedItem) Reset() {
	*x = PurchasedItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purchase_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchasedItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchasedItem) ProtoMessage() {}

func (x *PurchasedItem) ProtoReflect() protoreflect.Message {
	mi := &file_purchase_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchasedItem.ProtoReflect.Descriptor instead.
func (*PurchasedItem) Descriptor() ([]byte, []int) {
	return file_purchase_proto_rawDescGZIP(), []int{2}
}

func (x *PurchasedItem) GetProductId() uint64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *PurchasedItem) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencyCode string `protobuf:"bytes,1,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purchase_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_purchase_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_purchase_proto_rawDescGZIP(), []int{3}
}

func (x *Payment) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

// purchase cmd
type CreatePurchase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Purchase  *Purchase              `protobuf:"bytes,1,opt,name=purchase,proto3" json:"purchase,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *CreatePurchase) Reset() {
	*x = CreatePurchase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purchase_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePurchase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePurchase) ProtoMessage() {}

func (x *CreatePurchase) ProtoReflect() protoreflect.Message {
	mi := &file_purchase_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePurchase.ProtoReflect.Descriptor instead.
func (*CreatePurchase) Descriptor() ([]byte, []int) {
	return file_purchase_proto_rawDescGZIP(), []int{4}
}

func (x *CreatePurchase) GetPurchase() *Purchase {
	if x != nil {
		return x.Purchase
	}
	return nil
}

func (x *CreatePurchase) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// purchase result event
type PurchaseResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId uint64                 `protobuf:"varint,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	PurchaseId uint64                 `protobuf:"varint,2,opt,name=purchase_id,json=purchaseId,proto3" json:"purchase_id,omitempty"`
	Step       PurchaseStep           `protobuf:"varint,3,opt,name=step,proto3,enum=purchase.PurchaseStep" json:"step,omitempty"`
	Status     PurchaseStatus         `protobuf:"varint,4,opt,name=status,proto3,enum=purchase.PurchaseStatus" json:"status,omitempty"`
	Timestamp  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *PurchaseResult) Reset() {
	*x = PurchaseResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purchase_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseResult) ProtoMessage() {}

func (x *PurchaseResult) ProtoReflect() protoreflect.Message {
	mi := &file_purchase_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseResult.ProtoReflect.Descriptor instead.
func (*PurchaseResult) Descriptor() ([]byte, []int) {
	return file_purchase_proto_rawDescGZIP(), []int{5}
}

func (x *PurchaseResult) GetCustomerId() uint64 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *PurchaseResult) GetPurchaseId() uint64 {
	if x != nil {
		return x.PurchaseId
	}
	return 0
}

func (x *PurchaseResult) GetStep() PurchaseStep {
	if x != nil {
		return x.Step
	}
	return PurchaseStep_STEP_UPDATE_PRODUCT_INVENTORY
}

func (x *PurchaseResult) GetStatus() PurchaseStatus {
	if x != nil {
		return x.Status
	}
	return PurchaseStatus_STATUS_EXUCUTE
}

func (x *PurchaseResult) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type GeneralResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error     string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *GeneralResponse) Reset() {
	*x = GeneralResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purchase_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneralResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralResponse) ProtoMessage() {}

func (x *GeneralResponse) ProtoReflect() protoreflect.Message {
	mi := &file_purchase_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralResponse.ProtoReflect.Descriptor instead.
func (*GeneralResponse) Descriptor() ([]byte, []int) {
	return file_purchase_proto_rawDescGZIP(), []int{6}
}

func (x *GeneralResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GeneralResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GeneralResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type UpdateProductInventoryCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PurchasedItems []*PurchasedItem       `protobuf:"bytes,1,rep,name=purchased_items,json=purchasedItems,proto3" json:"purchased_items,omitempty"`
	Timestamp      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *UpdateProductInventoryCmd) Reset() {
	*x = UpdateProductInventoryCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purchase_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProductInventoryCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductInventoryCmd) ProtoMessage() {}

func (x *UpdateProductInventoryCmd) ProtoReflect() protoreflect.Message {
	mi := &file_purchase_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductInventoryCmd.ProtoReflect.Descriptor instead.
func (*UpdateProductInventoryCmd) Descriptor() ([]byte, []int) {
	return file_purchase_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateProductInventoryCmd) GetPurchasedItems() []*PurchasedItem {
	if x != nil {
		return x.PurchasedItems
	}
	return nil
}

func (x *UpdateProductInventoryCmd) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type RollbackProductInventoryCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *RollbackProductInventoryCmd) Reset() {
	*x = RollbackProductInventoryCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purchase_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollbackProductInventoryCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackProductInventoryCmd) ProtoMessage() {}

func (x *RollbackProductInventoryCmd) ProtoReflect() protoreflect.Message {
	mi := &file_purchase_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackProductInventoryCmd.ProtoReflect.Descriptor instead.
func (*RollbackProductInventoryCmd) Descriptor() ([]byte, []int) {
	return file_purchase_proto_rawDescGZIP(), []int{8}
}

func (x *RollbackProductInventoryCmd) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type CreateOrderCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId   uint64                 `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Order     *Order                 `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *CreateOrderCmd) Reset() {
	*x = CreateOrderCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purchase_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrderCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderCmd) ProtoMessage() {}

func (x *CreateOrderCmd) ProtoReflect() protoreflect.Message {
	mi := &file_purchase_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderCmd.ProtoReflect.Descriptor instead.
func (*CreateOrderCmd) Descriptor() ([]byte, []int) {
	return file_purchase_proto_rawDescGZIP(), []int{9}
}

func (x *CreateOrderCmd) GetOrderId() uint64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *CreateOrderCmd) GetOrder() *Order {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *CreateOrderCmd) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type RollbackOrderCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId   uint64                 `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *RollbackOrderCmd) Reset() {
	*x = RollbackOrderCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purchase_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollbackOrderCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackOrderCmd) ProtoMessage() {}

func (x *RollbackOrderCmd) ProtoReflect() protoreflect.Message {
	mi := &file_purchase_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackOrderCmd.ProtoReflect.Descriptor instead.
func (*RollbackOrderCmd) Descriptor() ([]byte, []int) {
	return file_purchase_proto_rawDescGZIP(), []int{10}
}

func (x *RollbackOrderCmd) GetOrderId() uint64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *RollbackOrderCmd) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type CreatePaymentCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentId uint64                 `protobuf:"varint,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	Order     *Order                 `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *CreatePaymentCmd) Reset() {
	*x = CreatePaymentCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purchase_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePaymentCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentCmd) ProtoMessage() {}

func (x *CreatePaymentCmd) ProtoReflect() protoreflect.Message {
	mi := &file_purchase_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentCmd.ProtoReflect.Descriptor instead.
func (*CreatePaymentCmd) Descriptor() ([]byte, []int) {
	return file_purchase_proto_rawDescGZIP(), []int{11}
}

func (x *CreatePaymentCmd) GetPaymentId() uint64 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *CreatePaymentCmd) GetOrder() *Order {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *CreatePaymentCmd) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type RollbackPaymentCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentId uint64                 `protobuf:"varint,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *RollbackPaymentCmd) Reset() {
	*x = RollbackPaymentCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purchase_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollbackPaymentCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackPaymentCmd) ProtoMessage() {}

func (x *RollbackPaymentCmd) ProtoReflect() protoreflect.Message {
	mi := &file_purchase_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackPaymentCmd.ProtoReflect.Descriptor instead.
func (*RollbackPaymentCmd) Descriptor() ([]byte, []int) {
	return file_purchase_proto_rawDescGZIP(), []int{12}
}

func (x *RollbackPaymentCmd) GetPaymentId() uint64 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *RollbackPaymentCmd) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_purchase_proto protoreflect.FileDescriptor

var file_purchase_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5e, 0x0a, 0x08, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2b,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x6a, 0x0a, 0x05, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x46, 0x0a, 0x0d, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x2e, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x7a, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x2e, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x08, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xea, 0x01, 0x0a, 0x0e,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x53, 0x74, 0x65, 0x70, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x30, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x7b, 0x0a, 0x0f, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x97, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x43, 0x6d, 0x64, 0x12, 0x40, 0x0a, 0x0f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22,
	0x57, 0x0a, 0x1b, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6d, 0x64, 0x12, 0x38,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x8c, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x38, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x67, 0x0a, 0x10, 0x52, 0x6f, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x22, 0x92, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x6d, 0x0a, 0x12, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2a, 0x61, 0x0a, 0x0c, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x53, 0x74, 0x65, 0x70, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x54, 0x45, 0x50, 0x5f, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x45,
	0x4e, 0x54, 0x4f, 0x52, 0x59, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x45, 0x50, 0x5f,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0x01, 0x12, 0x17,
	0x0a, 0x13, 0x53, 0x54, 0x45, 0x50, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x41,
	0x59, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x2a, 0x7c, 0x0a, 0x0e, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x45, 0x58, 0x55, 0x43, 0x55, 0x54, 0x45, 0x10, 0x00, 0x12, 0x12, 0x0a,
	0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52,
	0x4f, 0x4c, 0x4c, 0x42, 0x41, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x4f, 0x4c, 0x4c, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x10, 0x04, 0x32, 0xd0, 0x01, 0x0a, 0x12, 0x53, 0x61, 0x67, 0x61, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x16,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x23, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6d, 0x64, 0x1a, 0x19, 0x2e, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x18, 0x52, 0x6f, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x25, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x2e,
	0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6d, 0x64, 0x1a, 0x19, 0x2e, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xa2, 0x01, 0x0a, 0x10, 0x53, 0x61, 0x67,
	0x61, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a,
	0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x1a, 0x19, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0d, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x2e,
	0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6d, 0x64,
	0x1a, 0x19, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xac, 0x01,
	0x0a, 0x12, 0x53, 0x61, 0x67, 0x61, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6d,
	0x64, 0x1a, 0x19, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c,
	0x0a, 0x0f, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x1c, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x6f, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6d, 0x64, 0x1a,
	0x19, 0x2e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x06, 0x5a, 0x04,
	0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_purchase_proto_rawDescOnce sync.Once
	file_purchase_proto_rawDescData = file_purchase_proto_rawDesc
)

func file_purchase_proto_rawDescGZIP() []byte {
	file_purchase_proto_rawDescOnce.Do(func() {
		file_purchase_proto_rawDescData = protoimpl.X.CompressGZIP(file_purchase_proto_rawDescData)
	})
	return file_purchase_proto_rawDescData
}

var file_purchase_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_purchase_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_purchase_proto_goTypes = []interface{}{
	(PurchaseStep)(0),                   // 0: purchase.PurchaseStep
	(PurchaseStatus)(0),                 // 1: purchase.PurchaseStatus
	(*Purchase)(nil),                    // 2: purchase.Purchase
	(*Order)(nil),                       // 3: purchase.Order
	(*PurchasedItem)(nil),               // 4: purchase.PurchasedItem
	(*Payment)(nil),                     // 5: purchase.Payment
	(*CreatePurchase)(nil),              // 6: purchase.CreatePurchase
	(*PurchaseResult)(nil),              // 7: purchase.PurchaseResult
	(*GeneralResponse)(nil),             // 8: purchase.GeneralResponse
	(*UpdateProductInventoryCmd)(nil),   // 9: purchase.UpdateProductInventoryCmd
	(*RollbackProductInventoryCmd)(nil), // 10: purchase.RollbackProductInventoryCmd
	(*CreateOrderCmd)(nil),              // 11: purchase.CreateOrderCmd
	(*RollbackOrderCmd)(nil),            // 12: purchase.RollbackOrderCmd
	(*CreatePaymentCmd)(nil),            // 13: purchase.CreatePaymentCmd
	(*RollbackPaymentCmd)(nil),          // 14: purchase.RollbackPaymentCmd
	(*timestamppb.Timestamp)(nil),       // 15: google.protobuf.Timestamp
}
var file_purchase_proto_depIdxs = []int32{
	3,  // 0: purchase.Purchase.order:type_name -> purchase.Order
	5,  // 1: purchase.Purchase.payment:type_name -> purchase.Payment
	4,  // 2: purchase.Order.purchased_items:type_name -> purchase.PurchasedItem
	2,  // 3: purchase.CreatePurchase.purchase:type_name -> purchase.Purchase
	15, // 4: purchase.CreatePurchase.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 5: purchase.PurchaseResult.step:type_name -> purchase.PurchaseStep
	1,  // 6: purchase.PurchaseResult.status:type_name -> purchase.PurchaseStatus
	15, // 7: purchase.PurchaseResult.timestamp:type_name -> google.protobuf.Timestamp
	15, // 8: purchase.GeneralResponse.timestamp:type_name -> google.protobuf.Timestamp
	4,  // 9: purchase.UpdateProductInventoryCmd.purchased_items:type_name -> purchase.PurchasedItem
	15, // 10: purchase.UpdateProductInventoryCmd.timestamp:type_name -> google.protobuf.Timestamp
	15, // 11: purchase.RollbackProductInventoryCmd.timestamp:type_name -> google.protobuf.Timestamp
	3,  // 12: purchase.CreateOrderCmd.order:type_name -> purchase.Order
	15, // 13: purchase.CreateOrderCmd.timestamp:type_name -> google.protobuf.Timestamp
	15, // 14: purchase.RollbackOrderCmd.timestamp:type_name -> google.protobuf.Timestamp
	3,  // 15: purchase.CreatePaymentCmd.order:type_name -> purchase.Order
	15, // 16: purchase.CreatePaymentCmd.timestamp:type_name -> google.protobuf.Timestamp
	15, // 17: purchase.RollbackPaymentCmd.timestamp:type_name -> google.protobuf.Timestamp
	9,  // 18: purchase.SagaProductService.UpdateProductInventory:input_type -> purchase.UpdateProductInventoryCmd
	10, // 19: purchase.SagaProductService.RollbackProductInventory:input_type -> purchase.RollbackProductInventoryCmd
	11, // 20: purchase.SagaOrderService.CreateOrder:input_type -> purchase.CreateOrderCmd
	12, // 21: purchase.SagaOrderService.RollbackOrder:input_type -> purchase.RollbackOrderCmd
	13, // 22: purchase.SagaPaymentService.CreatePayment:input_type -> purchase.CreatePaymentCmd
	14, // 23: purchase.SagaPaymentService.RollbackPayment:input_type -> purchase.RollbackPaymentCmd
	8,  // 24: purchase.SagaProductService.UpdateProductInventory:output_type -> purchase.GeneralResponse
	8,  // 25: purchase.SagaProductService.RollbackProductInventory:output_type -> purchase.GeneralResponse
	8,  // 26: purchase.SagaOrderService.CreateOrder:output_type -> purchase.GeneralResponse
	8,  // 27: purchase.SagaOrderService.RollbackOrder:output_type -> purchase.GeneralResponse
	8,  // 28: purchase.SagaPaymentService.CreatePayment:output_type -> purchase.GeneralResponse
	8,  // 29: purchase.SagaPaymentService.RollbackPayment:output_type -> purchase.GeneralResponse
	24, // [24:30] is the sub-list for method output_type
	18, // [18:24] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_purchase_proto_init() }
func file_purchase_proto_init() {
	if File_purchase_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_purchase_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Purchase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purchase_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purchase_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchasedItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purchase_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purchase_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePurchase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purchase_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purchase_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneralResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purchase_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProductInventoryCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purchase_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollbackProductInventoryCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purchase_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrderCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purchase_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollbackOrderCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purchase_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePaymentCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purchase_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollbackPaymentCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_purchase_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_purchase_proto_goTypes,
		DependencyIndexes: file_purchase_proto_depIdxs,
		EnumInfos:         file_purchase_proto_enumTypes,
		MessageInfos:      file_purchase_proto_msgTypes,
	}.Build()
	File_purchase_proto = out.File
	file_purchase_proto_rawDesc = nil
	file_purchase_proto_goTypes = nil
	file_purchase_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SagaProductServiceClient is the client API for SagaProductService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SagaProductServiceClient interface {
	UpdateProductInventory(ctx context.Context, in *UpdateProductInventoryCmd, opts ...grpc.CallOption) (*GeneralResponse, error)
	RollbackProductInventory(ctx context.Context, in *RollbackProductInventoryCmd, opts ...grpc.CallOption) (*GeneralResponse, error)
}

type sagaProductServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSagaProductServiceClient(cc grpc.ClientConnInterface) SagaProductServiceClient {
	return &sagaProductServiceClient{cc}
}

func (c *sagaProductServiceClient) UpdateProductInventory(ctx context.Context, in *UpdateProductInventoryCmd, opts ...grpc.CallOption) (*GeneralResponse, error) {
	out := new(GeneralResponse)
	err := c.cc.Invoke(ctx, "/purchase.SagaProductService/UpdateProductInventory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sagaProductServiceClient) RollbackProductInventory(ctx context.Context, in *RollbackProductInventoryCmd, opts ...grpc.CallOption) (*GeneralResponse, error) {
	out := new(GeneralResponse)
	err := c.cc.Invoke(ctx, "/purchase.SagaProductService/RollbackProductInventory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SagaProductServiceServer is the server API for SagaProductService service.
type SagaProductServiceServer interface {
	UpdateProductInventory(context.Context, *UpdateProductInventoryCmd) (*GeneralResponse, error)
	RollbackProductInventory(context.Context, *RollbackProductInventoryCmd) (*GeneralResponse, error)
}

// UnimplementedSagaProductServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSagaProductServiceServer struct {
}

func (*UnimplementedSagaProductServiceServer) UpdateProductInventory(context.Context, *UpdateProductInventoryCmd) (*GeneralResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProductInventory not implemented")
}
func (*UnimplementedSagaProductServiceServer) RollbackProductInventory(context.Context, *RollbackProductInventoryCmd) (*GeneralResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RollbackProductInventory not implemented")
}

func RegisterSagaProductServiceServer(s *grpc.Server, srv SagaProductServiceServer) {
	s.RegisterService(&_SagaProductService_serviceDesc, srv)
}

func _SagaProductService_UpdateProductInventory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProductInventoryCmd)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SagaProductServiceServer).UpdateProductInventory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/purchase.SagaProductService/UpdateProductInventory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SagaProductServiceServer).UpdateProductInventory(ctx, req.(*UpdateProductInventoryCmd))
	}
	return interceptor(ctx, in, info, handler)
}

func _SagaProductService_RollbackProductInventory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RollbackProductInventoryCmd)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SagaProductServiceServer).RollbackProductInventory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/purchase.SagaProductService/RollbackProductInventory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SagaProductServiceServer).RollbackProductInventory(ctx, req.(*RollbackProductInventoryCmd))
	}
	return interceptor(ctx, in, info, handler)
}

var _SagaProductService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "purchase.SagaProductService",
	HandlerType: (*SagaProductServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateProductInventory",
			Handler:    _SagaProductService_UpdateProductInventory_Handler,
		},
		{
			MethodName: "RollbackProductInventory",
			Handler:    _SagaProductService_RollbackProductInventory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "purchase.proto",
}

// SagaOrderServiceClient is the client API for SagaOrderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SagaOrderServiceClient interface {
	CreateOrder(ctx context.Context, in *CreateOrderCmd, opts ...grpc.CallOption) (*GeneralResponse, error)
	RollbackOrder(ctx context.Context, in *RollbackOrderCmd, opts ...grpc.CallOption) (*GeneralResponse, error)
}

type sagaOrderServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSagaOrderServiceClient(cc grpc.ClientConnInterface) SagaOrderServiceClient {
	return &sagaOrderServiceClient{cc}
}

func (c *sagaOrderServiceClient) CreateOrder(ctx context.Context, in *CreateOrderCmd, opts ...grpc.CallOption) (*GeneralResponse, error) {
	out := new(GeneralResponse)
	err := c.cc.Invoke(ctx, "/purchase.SagaOrderService/CreateOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sagaOrderServiceClient) RollbackOrder(ctx context.Context, in *RollbackOrderCmd, opts ...grpc.CallOption) (*GeneralResponse, error) {
	out := new(GeneralResponse)
	err := c.cc.Invoke(ctx, "/purchase.SagaOrderService/RollbackOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SagaOrderServiceServer is the server API for SagaOrderService service.
type SagaOrderServiceServer interface {
	CreateOrder(context.Context, *CreateOrderCmd) (*GeneralResponse, error)
	RollbackOrder(context.Context, *RollbackOrderCmd) (*GeneralResponse, error)
}

// UnimplementedSagaOrderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSagaOrderServiceServer struct {
}

func (*UnimplementedSagaOrderServiceServer) CreateOrder(context.Context, *CreateOrderCmd) (*GeneralResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOrder not implemented")
}
func (*UnimplementedSagaOrderServiceServer) RollbackOrder(context.Context, *RollbackOrderCmd) (*GeneralResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RollbackOrder not implemented")
}

func RegisterSagaOrderServiceServer(s *grpc.Server, srv SagaOrderServiceServer) {
	s.RegisterService(&_SagaOrderService_serviceDesc, srv)
}

func _SagaOrderService_CreateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOrderCmd)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SagaOrderServiceServer).CreateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/purchase.SagaOrderService/CreateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SagaOrderServiceServer).CreateOrder(ctx, req.(*CreateOrderCmd))
	}
	return interceptor(ctx, in, info, handler)
}

func _SagaOrderService_RollbackOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RollbackOrderCmd)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SagaOrderServiceServer).RollbackOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/purchase.SagaOrderService/RollbackOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SagaOrderServiceServer).RollbackOrder(ctx, req.(*RollbackOrderCmd))
	}
	return interceptor(ctx, in, info, handler)
}

var _SagaOrderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "purchase.SagaOrderService",
	HandlerType: (*SagaOrderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateOrder",
			Handler:    _SagaOrderService_CreateOrder_Handler,
		},
		{
			MethodName: "RollbackOrder",
			Handler:    _SagaOrderService_RollbackOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "purchase.proto",
}

// SagaPaymentServiceClient is the client API for SagaPaymentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SagaPaymentServiceClient interface {
	CreatePayment(ctx context.Context, in *CreatePaymentCmd, opts ...grpc.CallOption) (*GeneralResponse, error)
	RollbackPayment(ctx context.Context, in *RollbackPaymentCmd, opts ...grpc.CallOption) (*GeneralResponse, error)
}

type sagaPaymentServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSagaPaymentServiceClient(cc grpc.ClientConnInterface) SagaPaymentServiceClient {
	return &sagaPaymentServiceClient{cc}
}

func (c *sagaPaymentServiceClient) CreatePayment(ctx context.Context, in *CreatePaymentCmd, opts ...grpc.CallOption) (*GeneralResponse, error) {
	out := new(GeneralResponse)
	err := c.cc.Invoke(ctx, "/purchase.SagaPaymentService/CreatePayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sagaPaymentServiceClient) RollbackPayment(ctx context.Context, in *RollbackPaymentCmd, opts ...grpc.CallOption) (*GeneralResponse, error) {
	out := new(GeneralResponse)
	err := c.cc.Invoke(ctx, "/purchase.SagaPaymentService/RollbackPayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SagaPaymentServiceServer is the server API for SagaPaymentService service.
type SagaPaymentServiceServer interface {
	CreatePayment(context.Context, *CreatePaymentCmd) (*GeneralResponse, error)
	RollbackPayment(context.Context, *RollbackPaymentCmd) (*GeneralResponse, error)
}

// UnimplementedSagaPaymentServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSagaPaymentServiceServer struct {
}

func (*UnimplementedSagaPaymentServiceServer) CreatePayment(context.Context, *CreatePaymentCmd) (*GeneralResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePayment not implemented")
}
func (*UnimplementedSagaPaymentServiceServer) RollbackPayment(context.Context, *RollbackPaymentCmd) (*GeneralResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RollbackPayment not implemented")
}

func RegisterSagaPaymentServiceServer(s *grpc.Server, srv SagaPaymentServiceServer) {
	s.RegisterService(&_SagaPaymentService_serviceDesc, srv)
}

func _SagaPaymentService_CreatePayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePaymentCmd)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SagaPaymentServiceServer).CreatePayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/purchase.SagaPaymentService/CreatePayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SagaPaymentServiceServer).CreatePayment(ctx, req.(*CreatePaymentCmd))
	}
	return interceptor(ctx, in, info, handler)
}

func _SagaPaymentService_RollbackPayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RollbackPaymentCmd)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SagaPaymentServiceServer).RollbackPayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/purchase.SagaPaymentService/RollbackPayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SagaPaymentServiceServer).RollbackPayment(ctx, req.(*RollbackPaymentCmd))
	}
	return interceptor(ctx, in, info, handler)
}

var _SagaPaymentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "purchase.SagaPaymentService",
	HandlerType: (*SagaPaymentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePayment",
			Handler:    _SagaPaymentService_CreatePayment_Handler,
		},
		{
			MethodName: "RollbackPayment",
			Handler:    _SagaPaymentService_RollbackPayment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "purchase.proto",
}
